"use strict";var _slicedToArray=function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,n){var t=[],r=!0,o=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(r=(a=u.next()).done)&&(t.push(a.value),!n||t.length!==n);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&u.return&&u.return()}finally{if(o)throw i}}return t}(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")},_createClass=function(){function r(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,n,t){return n&&r(e.prototype,n),t&&r(e,t),e}}();function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var DBHelper=function(){function a(){_classCallCheck(this,a)}return _createClass(a,null,[{key:"openIndexedDB",value:function(){return navigator.serviceWorker?idb.open("restaurant-reviews",2,function(e){switch(e.oldVersion){case 0:e.createObjectStore("restaurants",{keyPath:"id"}).createIndex("by-date","createdAt");case 1:e.createObjectStore("reviews",{keyPath:"id"}).createIndex("by-restaurant","restaurant_id")}}):Promise.resolve()}},{key:"idbAdd",value:function(r,o){return a.openIndexedDB().then(function(e){if(!e)return Promise.reject("Can't open indexedDB");var n=e.transaction(r,"readwrite"),t=n.objectStore(r);return void 0===o.length?t.put(o):o.forEach(function(e){return t.put(e)}),n.complete})}},{key:"idbRead",value:function(n,t){return a.openIndexedDB().then(function(e){return e?e.transaction(n).objectStore(n).get(parseInt(t)):Promise.reject("Can't open indexedDB")}).then(function(e){return e?Promise.resolve(e):Promise.reject("Can't find this key!")})}},{key:"idbReadAllByIndex",value:function(n,t,r){return a.openIndexedDB().then(function(e){return e?e.transaction(n).objectStore(n).index(t).getAll(parseInt(r)):Promise.reject("Can't open indexedDB")}).then(function(e){return e.length?Promise.resolve(e):Promise.reject("Can't find this key!")})}},{key:"idbReadWrite",value:function(r,o){return a.openIndexedDB().then(function(e){if(!e)return Promise.reject("Can't open indexedDB");var n=e.transaction(r,"readwrite"),t=n.objectStore(r);return t.get(parseInt(o)).then(function(e){return e?Promise.resolve([e,n,t]):Promise.reject("Can't find this key!")})})}},{key:"idbReadAll",value:function(n){return a.openIndexedDB().then(function(e){return e?e.transaction(n).objectStore(n).getAll():Promise.reject("Can't open indexedDB")}).then(function(e){return e.length?Promise.resolve(e):Promise.reject("Can't find data!")})}},{key:"fetchRestaurants",value:function(n){a.idbReadAll("restaurants").then(function(e){console.log("Fetched all restaurants:",e),n(null,e)}).catch(function(e){console.log(e),fetch(a.DATABASE_URL+"restaurants").then(function(e){return e.json()}).then(function(e){a.idbAdd("restaurants",e).then(function(){console.log("Data successfully added")}).catch(function(e){console.log(e)}),n(null,e)}).catch(function(e){n(e,null)})})}},{key:"fetchRestaurantById",value:function(r,o){a.fetchRestaurants(function(e,n){if(e)o(e,null);else{var t=n.find(function(e){return e.id==r});t?o(null,t):o("Restaurant does not exist!",null)}})}},{key:"fetchRestaurantByCuisine",value:function(r,o){a.fetchRestaurants(function(e,n){if(e)o(e,null);else{var t=n.filter(function(e){return e.cuisine_type==r});o(null,t)}})}},{key:"fetchRestaurantByNeighborhood",value:function(r,o){a.fetchRestaurants(function(e,n){if(e)o(e,null);else{var t=n.filter(function(e){return e.neighborhood==r});o(null,t)}})}},{key:"fetchRestaurantByCuisineAndNeighborhood",value:function(r,o,i){a.fetchRestaurants(function(e,n){if(e)i(e,null);else{var t=n;"all"!=r&&(t=t.filter(function(e){return e.cuisine_type==r})),"all"!=o&&(t=t.filter(function(e){return e.neighborhood==o})),i(null,t)}})}},{key:"fetchNeighborhoods",value:function(o){a.fetchRestaurants(function(e,t){if(e)o(e,null);else{var r=t.map(function(e,n){return t[n].neighborhood}),n=r.filter(function(e,n){return r.indexOf(e)==n});o(null,n)}})}},{key:"fetchCuisines",value:function(o){a.fetchRestaurants(function(e,t){if(e)o(e,null);else{var r=t.map(function(e,n){return t[n].cuisine_type}),n=r.filter(function(e,n){return r.indexOf(e)==n});o(null,n)}})}},{key:"urlForRestaurant",value:function(e){return"./restaurant.html?id="+e.id}},{key:"imageUrlForRestaurant",value:function(e){return"/img/"+e.photograph}},{key:"fetchReviewsByRestaurantId",value:function(n){return a.idbReadAllByIndex("reviews","by-restaurant",n).then(function(e){return console.log("Offline stored reviews:",e),Promise.resolve(e)}).catch(function(e){return console.log(e),fetch(a.DATABASE_URL+"reviews/?restaurant_id="+n).then(function(e){return e.json()}).then(function(e){return a.idbAdd("reviews",e).then(function(){console.log("Data successfully added")}).catch(function(e){console.log(e)}),console.log("Reviews are:",e),Promise.resolve(e)}).catch(function(e){console.log(e)})})}},{key:"sendNewReviewToServer",value:function(e){fetch("http://localhost:1337/reviews",{method:"POST",body:JSON.stringify(e),headers:new Headers({"Content-Type":"application/json"})}).then(function(e){var n=e.headers.get("content-type");if(n&&-1!==n.indexOf("application/json"))return e.json()}).then(function(e){e&&(console.log("Successfully sent review!",e),a.idbAdd("reviews",e).then(function(){console.log("Data successfully added")}).catch(function(e){console.log(e)}))}).catch(function(e){console.log(e)})}},{key:"sendNewReviewWhenOnline",value:function(n){console.log("Review to be sent when online: ",n),window.addEventListener("online",function(e){console.log("Browser is online again!"),document.querySelectorAll(".offline-review").forEach(function(e){e.classList.remove("offline-review"),e.querySelector(".offline-label").remove()}),console.log(n),a.sendNewReviewToServer(n)})}},{key:"updateFavoriteStatus",value:function(n,i){fetch(a.DATABASE_URL+"restaurants/"+n+"/?is_favorite="+i,{method:"PUT"}).then(function(e){console.log("[Server] Favorite status changed"),a.idbReadWrite("restaurants",n).then(function(e){var n=_slicedToArray(e,3),t=n[0],r=n[1],o=n[2];return t.is_favorite=i,o.put(t),r.complete}).then(function(){console.log("[IndexedDB] Favorite status successfully changed")}).catch(function(e){console.log(e)})}).catch(function(e){console.log(e)})}},{key:"mapMarkerForRestaurant",value:function(e,n){var t=new L.marker([e.latlng.lat,e.latlng.lng],{title:e.name,alt:e.name,url:a.urlForRestaurant(e)});return t.addTo(newMap),t}},{key:"DATABASE_URL",get:function(){return"http://localhost:1337/"}}]),a}();"serviceWorker"in navigator&&navigator.serviceWorker.register("./sw.js").then(function(e){console.log("SW registration worked")}).catch(function(e){console.log("Registration failed!!")});